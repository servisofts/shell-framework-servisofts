#!/bin/bash

JSON commands new

JSON options new
JSON options put "-h" "_help"
JSON options put "-i" "_repo_info"
JSON options put "-ls#2" "_repo_list"
JSON options put "-f" "_repo_find"

_help() {
    JSON help_info new
    JSON help_info put "_help" "Muestra la ayuda."
    JSON help_info put "_repo_info" "Muestra la informacion del repositorio."
    JSON help_info put "_repo_list" "Muestra la lista de programas disponibles en el repositorio."
    JSON help_info put "_repo_find" "Muestra."
    shelp commands options help_info "repo"
    exit 0
}

_repo_info() {
    sconsole -l "REPOSITORY=$REPOSITORY"
    exit 0
}

# _repo_download() {
#     dir=$1
#     url="$REPOSITORY$REPOSITORY_PATH_OPT/$dir"
#     curl -0 $url
#     exit 0
# }
_repo_list() {
    dir=$1
    url="$REPOSITORY$dir/"
    sconsole -g "$url"
    lista=($(curl -s "$url" | grep 'href' | perl -nle 'm/.*?href="(.*)?".*/; print $1' | grep -v '\.\.'))
    sconsole -g "${lista[*]}"
    for key in ${lista[@]}; do
        name=${key%/}
        echo -e "$name=$url$key"
        # printf " $name "
        # exit 0
    done
    echo ""
    exit 0
}
_repo_find() {
    # sconsole -l "Buscando repositorio = $*"
    url="$REPOSITORY$REPOSITORY_PATH_OPT/"
    # sconsole -l "$url"
    lista=($(curl -s "$url" | grep 'href' | perl -nle 'm/.*?href="(.*)?".*/; print $1'))
    for key in ${lista[@]}; do
        name=${key%/}
        if [ "$name" = "$1" ]; then
            echo "$url$key"
            exit 0
        fi
    done
    sconsole -l "($1) ***NOT FOUND***"
}
export_module commands options

# _help
